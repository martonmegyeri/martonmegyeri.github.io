@use "../../styles/mixins.scss";

.button {
  --padding-x: max(16px, 1.5vw);
  --padding-y: calc(var(--padding-x) * 2);
  --border-width: max(1px, 1vw);

  @include mixins.reset-button;
  border: calc(var(--border-width) / 100) solid hsl(0, 0%, 100%, 40%);
  border-radius: 10vw;
  cursor: pointer;
  transition: border-color var(--transition-primary);

  &:hover {
    border-color: var(--color-white);

    .children {
      .text {
        .actual {
          transform: translate3d(0, -100%, 0);
        }

        .visual {
          transform: translate3d(0, 0, 0);
        }
      }

      .arrow {
        &.link {
          transform: rotate(225deg);
        }

        &.top {
          transform: rotate(180deg);
        }
      }
    }
  }

  .content {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    padding: var(--padding-x) var(--padding-y);
  }

  .children {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;

    .text {
      position: relative;
      z-index: 1;
      display: flex;
      overflow: hidden;
      font-weight: 500;
      font-size: max(14px, 0.65rem);
      line-height: 1.1;

      .actual {
        transition: transform var(--transition-smooth);
      }

      .visual {
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        transform: translate3d(0, 100%, 0);
        transition: transform var(--transition-smooth);
      }
    }

    .arrow {
      --arrow-size: calc(var(--padding-x) * 1.2);

      filter: invert(1);
      margin-inline: min(-10px, -0.5vw) min(5px, 0.25vw);
      width: var(--arrow-size);
      height: var(--arrow-size);
      transition: var(--transition-smooth);

      &.link {
        transform: rotate(-45deg);
      }

      &.top {
        transform: rotate(-135deg);
      }
    }
  }
}
